pipeline{
    agent any

    stages{
        stage('Build'){
            steps{
                echo "Build Stage.....Build Code using Maven"
                               
            }
        }
        stage('Unit and Integration Tests'){
            steps{
                echo "Unit and Integration Testing...using Maven Integration and Testing tools"
                
                
            }
        }
        stage('Code Analysis'){
            steps{
                echo "Check the quality of the code using SonarQube Analysis"
                
            }
        }
        stage('Security Scan'){
            steps{
                echo "Security Scan.... Using OWASP ZAP"
                
            }
            post {
                always {
                    script {
                        def status = currentBuild.resultIsBetterOrEqualTo('SUCCESS') ? 'Successful' : 'Failed'
                        emailext (
                        subject: "Pipeline Stage Result: ${status}",
                        body: "The stage has completed. Result: ${status}",
                        to: "hudaabbasi71@gmail.com",
                        mimeType: 'text/html', // Set content type
                        attachLog: true,
                        // SMTP server configuration
                        smtpServer: "smtp.gmail.com",
                        smtpPort: "465",
                        smtpAuth: true,
                        smtpUser: "hudaabbasi71@gmail.com",
                        smtpPassword: "ndamneaxrdbjeoxz"
                        )
                    }
                }
            }
        
        }
        stage('Deploy to Staging'){
            steps{
                echo "Deployed to staging Enviornment using AWS CodeDeploy"
                
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploy to Production using AWS CodeDeploy"
                
            }
        }    
    }
}
